# KBO ELO System - Debian 12 AMD64 호환 버전
# GCP e2-medium (debian-12-bookworm-v20250513) 전용

services:
  # PostgreSQL Database - AMD64 버전
  kbo-postgres:
    image: minkoosong/kbo-postgres-data:17.2-amd64
    container_name: kbo-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kbo_elo_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - kbo_postgres_data:/var/lib/postgresql/data
    networks:
      - kbo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-kbo_elo_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main KBO ELO API - AMD64 버전
  kbo-api-main:
    image: minkoosong/kbo-api-main:latest-amd64
    container_name: kbo-api-8000
    ports:
      - "${MAIN_API_PORT:-8000}:8000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@kbo-postgres:5432/${POSTGRES_DB:-kbo_elo_db}
      PYTHONPATH: /app
      API_TITLE: "KBO ELO API"
      API_VERSION: "1.0.0"
    depends_on:
      kbo-postgres:
        condition: service_healthy
    networks:
      - kbo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/system/db-status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Live Rating API - 기존 이미지 사용 (AMD64 지원 확인됨)
  kbo-api-live:
    image: minkoosong/kbo-live-rating-api:database-fixed
    container_name: kbo-api-8001
    ports:
      - "${LIVE_API_PORT:-8001}:8001"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@kbo-postgres:5432/${POSTGRES_DB:-kbo_elo_db}
      PYTHONPATH: /app/kbo_elo_system
      WAIT_FOR_DB: "true"
      TEST_DB_CONNECTION: "true"
      API_TITLE: "KBO Live Rating API"
      API_VERSION: "2.0.0"
    depends_on:
      kbo-postgres:
        condition: service_healthy
    networks:
      - kbo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application - 임시로 nginx 대체
  kbo-frontend-temp:
    image: nginx:alpine
    container_name: kbo-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    volumes:
      - ./temp-index.html:/usr/share/nginx/html/index.html:ro
    depends_on:
      - kbo-api-main
      - kbo-api-live
    networks:
      - kbo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Unified Scheduler - AMD64 버전
  kbo-unified-scheduler:
    image: minkoosong/kbo-unified-scheduler:v2-amd64
    container_name: kbo-unified-scheduler
    ports:
      - "${SCHEDULER_PORT:-8080}:8080"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@kbo-postgres:5432/${POSTGRES_DB:-kbo_elo_db}
      PYTHONPATH: /app
      TZ: ${TIMEZONE:-Asia/Seoul}
      PYTHONIOENCODING: utf-8
    volumes:
      - kbo_scheduler_logs:/app/logs
      - kbo_scheduler_data:/app/data
      - kbo_scheduler_cache:/app/cache
    depends_on:
      kbo-postgres:
        condition: service_healthy
    networks:
      - kbo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy
  kbo-proxy:
    image: nginx:alpine
    container_name: kbo-nginx-proxy
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx-production.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - kbo-frontend-temp
      - kbo-api-main
      - kbo-api-live
    networks:
      - kbo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  kbo_postgres_data:
    name: kbo_postgres_data
    driver: local
  kbo_scheduler_logs:
    name: kbo_scheduler_logs
    driver: local
  kbo_scheduler_data:
    name: kbo_scheduler_data
    driver: local
  kbo_scheduler_cache:
    name: kbo_scheduler_cache
    driver: local

networks:
  kbo-network:
    name: kbo-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16